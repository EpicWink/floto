language: python
sudo: false

# We don't care about Travis' python versions, we install conda anyway
env:
  global:
    - AWS_DEFAULT_REGION=eu-west-1
  matrix:
    - CONDA_PYTHON_VERSION=3.5

before_install:
  # Install conda
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no
  - conda update conda

install:
  # Install dependencies
  - conda create --yes -n testenv_$CONDA_PYTHON_VERSION python=$CONDA_PYTHON_VERSION 
  - source activate testenv_$CONDA_PYTHON_VERSION
  - conda install -c https://conda.anaconda.org/babbel boto3 pytest pytest-mock pytest-pythonpath

script:
  - py.test -vv -r sxX

before_deploy:
  - zip -r latest .
  - mkdir -p deploy_dest
  - cp latest.zip deploy_dest/$TRAVIS_COMMIT.zip
  - mv latest.zip deploy_dest/latest.zip


deploy:
  # push zips to s3
  # Staging environment
  - env:               staging
    provider:          s3
    access_key_id:     $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket:            $AWS_BUCKET
    region:            $AWS_BUCKET_REGION
    local_dir:         deploy_dest
    upload-dir:        $TRAVIS_REPO_SLUG/staging
    acl:               private # keep them private
    skip_cleanup:      true
    on:
      branch: master

  # Production environment
  - env:               production
    provider:          s3
    access_key_id:     $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    bucket:            $AWS_BUCKET
    region:            $AWS_BUCKET_REGION
    upload-dir:        $TRAVIS_REPO_SLUG/production/$TRAVIS_COMMIT
    acl:               private # keep them private
    skip_cleanup:      true
    on:
      branch: release

notifications:
  email: true
